name: main

on:
  pull_request:
    branches: [dev]
  push:
    branches: [dev]

env:
  PROJ_DIR: ./isa
  PROJ_DIR_FE: ./isa-spa
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/isa
  DOCKERHUB_REPO_FE: ${{ secrets.DOCKERHUB_USERNAME }}/isa-front
  REACT_APP_API_URL: ${{ vars.REACT_APP_API_URL }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Lint commit messages
        uses: wagoid/commitlint-github-action@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build and Test with Maven - BE
        run: mvn -B test --file ./isa/pom.xml

      - name: Dump variables
        run: echo "$GITHUB_CONTEXT"  

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'
          cache-dependency-path: ${{ env.PROJ_DIR_FE }}
          registry-url: 'https://npm.pkg.github.com'
      - name: Build with NPM - FE
        working-directory: ${{ env.PROJ_DIR_FE }}
        run: |
          npm ci
          npm run build --if-present

      - name: Create a Release
        id: version
        if: github.event_name == 'push'
        run: |
          npm install semantic-release@19.0.5
          npm install semantic-release-export-data@1.0.1
          npx semantic-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Publish packages to GPR
      #   if: github.event_name == 'push'
      #   run: |
      #     mvn --file ${{ env.PROJ_DIR }}/pom.xml --batch-mode deploy -DskipTests -Drevision=${{ steps.version.outputs.new-release-version }}
      #     cd ${{ env.PROJ_DIR_FE }}
      #     npm version ${{ steps.version.outputs.new-release-version }}
      #     npm publish
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        if: github.event_name == 'push'
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: ðŸš€ Deploy server application to the DigitalOcean Platform
        uses: digitalocean/app_action@v1.1.5
        with:
          app_name: isa-server
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          images: '[
              {
                "name": "server",
                "image": {
                  "registry_type": "DOCKER_HUB",
                  "registry": "djolewalker",
                  "repository": "isa",
                  "tag": "latest"
                }
              }
            ]'

      - name: ðŸš€ Deploy client application to the GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ${{ env.PROJ_DIR_FE }}/build